package cvut.fel.dbs.lib.gui;

import cvut.fel.dbs.lib.Application;
import cvut.fel.dbs.lib.model.Instructor;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rufus
 */
public class GUI extends javax.swing.JFrame {
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        Application app = new Application();
        app.setup();
        showInstructorsInTable();
        tfPersonId.setEditable(false);
    }
    
    Application app2 = new Application();
    // Shows instructors from database to tableData
    public void showInstructorsInTable() {
        ArrayList<Instructor> list = app2.getInstructorsList();
        DefaultTableModel model = (DefaultTableModel)tableData.getModel();
        Object[] row = new Object[6];
        for(int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getPersonId();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getEmployeeNumber();
            row[3] = list.get(i).getWeb();
            row[4] = list.get(i).getPhoneNumber();
            row[5] = list.get(i).getSalary();
            
            model.addRow(row);
        }
    }
    
    //Check if integer
    public static boolean isInteger(String s) {
        boolean isValidInteger = false;
        try
        {
            Integer.parseInt(s);
 
            isValidInteger = true;
        }
        catch (NumberFormatException ex)
        {
            return isValidInteger;
        }
 
        return isValidInteger;
    }
    
    public static boolean hasOnlyLetters(String s) {
        boolean isValid = false;
        if (Pattern.matches("[a-zA-Z]+", s)) {
            isValid = true;
        }
        return isValid;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelInsPage = new javax.swing.JLabel();
        labelNameIns = new javax.swing.JLabel();
        labelEmpNumbIns = new javax.swing.JLabel();
        labelPhoneIns = new javax.swing.JLabel();
        labelSalaryIns = new javax.swing.JLabel();
        labelWebIns = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        tfNameIns = new javax.swing.JTextField();
        tfEmpNumberIns = new javax.swing.JTextField();
        tfWebIns = new javax.swing.JTextField();
        tfPhoneIns = new javax.swing.JTextField();
        tfSalaryIns = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        labelPersonId = new javax.swing.JLabel();
        tfPersonId = new javax.swing.JTextField();
        bttnChageFrameToRelationship = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelInsPage.setText("Instructor page");

        labelNameIns.setText("Name:");

        labelEmpNumbIns.setText("Employee №: ");

        labelPhoneIns.setText("Phone №: ");

        labelSalaryIns.setText("Salary:");

        labelWebIns.setText("WEB: ");

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "EmpNumber", "WEB", "Phone Number", "Salary"
            }
        ));
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        tfNameIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameInsActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnChange.setText("Change");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelPersonId.setText("Id:");

        bttnChageFrameToRelationship.setText("Relationship page");
        bttnChageFrameToRelationship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnChageFrameToRelationshipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnChange)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelNameIns)
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfNameIns)
                                    .addComponent(tfPersonId)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEmpNumbIns)
                                    .addComponent(labelWebIns)
                                    .addComponent(labelPhoneIns)
                                    .addComponent(labelSalaryIns))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfSalaryIns, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                                    .addComponent(tfPhoneIns)
                                    .addComponent(tfWebIns)
                                    .addComponent(tfEmpNumberIns))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelPersonId))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(labelInsPage)
                        .addGap(96, 96, 96)
                        .addComponent(bttnChageFrameToRelationship)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInsPage)
                    .addComponent(bttnChageFrameToRelationship))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPersonId)
                    .addComponent(tfPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNameIns)
                    .addComponent(tfNameIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmpNumbIns)
                    .addComponent(tfEmpNumberIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfWebIns, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelWebIns))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPhoneIns)
                    .addComponent(tfPhoneIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSalaryIns)
                    .addComponent(tfSalaryIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd)
                        .addComponent(btnChange)
                        .addComponent(btnDelete))
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNameInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameInsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameInsActionPerformed
    
    // Add instructor in database 
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      app2.setup();
      
      //Check if data isn't empty and have right length
      if(tfNameIns.getText().trim().isEmpty() || tfNameIns.getText().length() < 2 || !hasOnlyLetters(tfNameIns.getText())) {
          errorLabel.setText("Name is empty or isn't correct.");
          errorLabel.setVisible(true);
      } else if (tfEmpNumberIns.getText().trim().isEmpty() || String.valueOf(tfEmpNumberIns.getText()).length() != 6 
              || !isInteger(String.valueOf(tfEmpNumberIns.getText()))){
          errorLabel.setText("Employee number is empty or isn't correct.");
          errorLabel.setVisible(true);
      } else if (tfWebIns.getText().trim().isEmpty() || tfWebIns.getText().length() < 4) {
          errorLabel.setText("Web is empty or isn't correct.");
          errorLabel.setVisible(true);
      } else if (tfPhoneIns.getText().trim().isEmpty() || String.valueOf(tfPhoneIns.getText()).length() != 9 
              || !isInteger(String.valueOf(tfPhoneIns.getText())))  {
          errorLabel.setText("Phone number is empty or isn't correct");
          errorLabel.setVisible(true);
      } else if (tfSalaryIns.getText().trim().isEmpty() || String.valueOf(tfSalaryIns.getText()).length() < 3   
              || String.valueOf(tfSalaryIns.getText()).length() > 6 || !isInteger(String.valueOf(tfSalaryIns.getText()))) {
          errorLabel.setText("Salary is empty or isn't correct");
          errorLabel.setVisible(true);
      } else {
          try{
        
            // Check if employee number, web or phone number already exists
            if (app2.findInsEmpNumber(Integer.valueOf(tfEmpNumberIns.getText()))) {
                errorLabel.setText("Instructor with this employeeNumber already exists.");
                errorLabel.setVisible(true);
            } else if (app2.findInsWeb(tfWebIns.getText())) {
                errorLabel.setText("Instructor with this web already exists.");
                errorLabel.setVisible(true);
            } else if (app2.findInsPhoneNumber(Integer.valueOf(tfPhoneIns.getText()))) {
                errorLabel.setText("Instructor with this phone number already exists.");
                errorLabel.setVisible(true);
            } else {
                errorLabel.setVisible(false);
                Instructor p1 = new Instructor();
        
                p1.setName(tfNameIns.getText());
                p1.setEmployeeNumber(Integer.valueOf(tfEmpNumberIns.getText()));
                p1.setWeb(tfWebIns.getText());
                p1.setPhoneNumber(Integer.valueOf(tfPhoneIns.getText()));
                p1.setSalary(Integer.valueOf(tfSalaryIns.getText()));
 
                app2.getTransactionBegin();
                app2.createIns(p1);
                app2.getTransactionCommit();
                DefaultTableModel model = (DefaultTableModel)tableData.getModel();
                model.setRowCount(0);
                showInstructorsInTable();
            }
           }
            catch (Exception ex){
                System.out.print(ex);
           }
            finally{
                app2.close();
           }
      }
    }//GEN-LAST:event_btnAddActionPerformed

    // Shows data of selected row
    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        // Display Selected Row 
        errorLabel.setVisible(false);
        int i = tableData.getSelectedRow();
        TableModel model = tableData.getModel();
        tfPersonId.setText(model.getValueAt(i, 0).toString());
        tfNameIns.setText(model.getValueAt(i, 1).toString());
        tfEmpNumberIns.setText(model.getValueAt(i, 2).toString());
        tfWebIns.setText(model.getValueAt(i, 3).toString());
        tfPhoneIns.setText(model.getValueAt(i, 4).toString());
        tfSalaryIns.setText(model.getValueAt(i, 5).toString()); 
    }//GEN-LAST:event_tableDataMouseClicked

    // Delete instructor from database
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        app2.setup();
        try {
            errorLabel.setVisible(false);
            Instructor p1 = new Instructor();
        
            p1.setName(tfNameIns.getText());
            p1.setEmployeeNumber(Integer.valueOf(tfEmpNumberIns.getText()));
            p1.setWeb(tfWebIns.getText());
            p1.setPhoneNumber(Integer.valueOf(tfPhoneIns.getText()));
            p1.setSalary(Integer.valueOf(tfSalaryIns.getText()));
            
            Long delInsId = app2.findInstructorId(p1);
            p1.setPersonId(delInsId);
            
            if (p1.getPersonId() == null) {
                errorLabel.setText("Instructor isn't in database.");
                errorLabel.setVisible(true);
            } else {
                app2.getTransactionBegin();
                // Remove all references to this instructor in its autocourse
                p1.getInstructoredAutoCourses().forEach(autocourse -> {
                    autocourse.getInstructors().remove(p1);
                });
                app2.deleteIns(p1);
                app2.getTransactionCommit();
                DefaultTableModel model = (DefaultTableModel)tableData.getModel();
                model.setRowCount(0);
                showInstructorsInTable();
            }
            
        } catch (NumberFormatException ex) {
            System.out.print(ex);
        } finally {
            app2.close();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    // Change data from selected instructor
    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        app2.setup();
        if(tfNameIns.getText().trim().isEmpty() || tfNameIns.getText().length() < 2 || !hasOnlyLetters(tfNameIns.getText())) {
          errorLabel.setText("Name is empty or isn't correct.");
            errorLabel.setVisible(true);
        } else if (tfEmpNumberIns.getText().trim().isEmpty() || String.valueOf(tfEmpNumberIns.getText()).length() != 6){
            errorLabel.setText("Employee number is empty or isn't correct.");
            errorLabel.setVisible(true);
        } else if (tfWebIns.getText().trim().isEmpty() || tfWebIns.getText().length() < 4) {
          errorLabel.setText("Web is empty or isn't correct.");
            errorLabel.setVisible(true);
        } else if (tfPhoneIns.getText().trim().isEmpty() || String.valueOf(tfPhoneIns.getText()).length() != 9)  {
            errorLabel.setText("Phone number is empty or isn't correct");
            errorLabel.setVisible(true);
        } else if (tfSalaryIns.getText().trim().isEmpty() || String.valueOf(tfSalaryIns.getText()).length() < 3   
              || String.valueOf(tfSalaryIns.getText()).length() > 6 || !isInteger(String.valueOf(tfSalaryIns.getText()))) {
            errorLabel.setText("Salary isn't correct");
            errorLabel.setVisible(true);
        } else {
            try{
                    errorLabel.setVisible(false);
                    Long id = Long.valueOf(tfPersonId.getText());
                    Instructor p1 = app2.findIns(id);
                
                    app2.getTransactionBegin();
                
                    Instructor p2 = app2.mergeIns(p1);
                
                    p2.setName(tfNameIns.getText());
                    p2.setEmployeeNumber(Integer.valueOf(tfEmpNumberIns.getText()));
                    p2.setWeb(tfWebIns.getText());
                    p2.setPhoneNumber(Integer.valueOf(tfPhoneIns.getText()));
                    p2.setSalary(Integer.valueOf(tfSalaryIns.getText()));
            
                    app2.getTransactionCommit();
                    DefaultTableModel model = (DefaultTableModel)tableData.getModel();
                    model.setRowCount(0);
                    showInstructorsInTable();
                
            }catch (Exception ex) {
                System.out.print(ex);
            }finally {
                app2.close();
            }
        }
    }//GEN-LAST:event_btnChangeActionPerformed
    
    // Change frame to Relationship frame
    private void bttnChageFrameToRelationshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnChageFrameToRelationshipActionPerformed
        new RelationshipGUI().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bttnChageFrameToRelationshipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton bttnChageFrameToRelationship;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelEmpNumbIns;
    private javax.swing.JLabel labelInsPage;
    private javax.swing.JLabel labelNameIns;
    private javax.swing.JLabel labelPersonId;
    private javax.swing.JLabel labelPhoneIns;
    private javax.swing.JLabel labelSalaryIns;
    private javax.swing.JLabel labelWebIns;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField tfEmpNumberIns;
    private javax.swing.JTextField tfNameIns;
    private javax.swing.JTextField tfPersonId;
    private javax.swing.JTextField tfPhoneIns;
    private javax.swing.JTextField tfSalaryIns;
    private javax.swing.JTextField tfWebIns;
    // End of variables declaration//GEN-END:variables
}
